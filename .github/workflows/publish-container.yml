# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Containers

on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

  pull_request:
    paths:
      - 'cloud/Dockerfile'
      - '.github/workflows/publish-alwatr-container.yml'

env:
  REGISTRY: ghcr.io
  USERNAME: ${{github.repository_owner}}
  # USERNAME: ${{github.actor}}
  # USERNAME: Alwatr

jobs:
  build:
    name: Build Container
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        include:
          - image: njfamirm-blog-cms
            description: Njfamirm personal website CMS.

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      id-token: write

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@v4.1.0

      - name: üèó Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: üèó Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üèó Extract metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          images: name=${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.image }},enable=true

          labels: |
            org.opencontainers.image.authors=Ali.Mihandoost@gmail.com
            org.opencontainers.image.title=@alwatr/${{ matrix.image }}
            org.opencontainers.image.description=${{ matrix.description }}

          tags: |
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=semver,enable=true,pattern={{version}}
            type=ref,enable=true,event=pr
            type=ref,enable=true,event=branch

      - name: üöÄ Build and push container image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          push: ${{ github.event_name != 'pull_request' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: cloud/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üèó Install cosign
        if: ${{ github.event_name != 'pull_request' }}
        uses: sigstore/cosign-installer@v3.1.2

      - name: üèó Sign the published container image
        if: ${{github.event_name != 'pull_request'}}
        env:
          COSIGN_EXPERIMENTAL: 'true'
        run: echo "${{steps.meta.outputs.tags}}" | xargs -I {} cosign sign --yes {}@${{steps.build-and-push.outputs.digest}}
